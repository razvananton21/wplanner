# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app_url: '%env(APP_URL)%'
    app.jwt_private_key: '%env(resolve:JWT_PRIVATE_KEY)%'
    app.jwt_public_key: '%env(resolve:JWT_PUBLIC_KEY)%'
    app.jwt_passphrase: '%env(JWT_PASSPHRASE)%'
    app.jwt_secret_key: '%env(JWT_SECRET_KEY)%'
    app.upload_directory: '%kernel.project_dir%/public/uploads'
    app.vendor_upload_directory: '%kernel.project_dir%/public/uploads/vendors'
    # Disable interactive mode for Symfony commands
    console.command.no_interaction: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $uploadDir: '%app.vendor_upload_directory%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Controllers configuration
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Wedding resolver for controllers
    App\Controller\TimelineEventController:
        arguments:
            $weddingRepository: '@App\Repository\WeddingRepository'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\GuestService:
        arguments:
            $appUrl: '%app_url%'
